name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-release-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-release-
          ${{ runner.os }}-go-



    - name: Install UPX
      run: |
        sudo apt-get update
        sudo apt-get install -y upx-ucl

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3
      with:
        cosign-release: 'v2.2.2'

    - name: Install Syft (for SBOM generation)
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Verify shell completions exist
      run: |
        # Ensure completion files are present (they should be checked into git)
        ls -la completions/
        [ -f completions/cidrator.bash ] || { echo "Missing bash completion"; exit 1; }
        [ -f completions/cidrator.zsh ] || { echo "Missing zsh completion"; exit 1; }
        [ -f completions/cidrator.fish ] || { echo "Missing fish completion"; exit 1; }

    - name: Import GPG key
      if: env.GPG_PRIVATE_KEY != ''
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo "$GPG_PRIVATE_KEY" | gpg --batch --import
        echo "GPG_FINGERPRINT=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d'/' -f2)" >> $GITHUB_ENV

    - name: Run tests
      run: |
        go test -v ./...

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
        AUR_KEY: ${{ secrets.AUR_KEY }}
        FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
        FURY_ACCOUNT: ${{ secrets.FURY_ACCOUNT }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}



    - name: Verify release artifacts
      run: |
        # Verify checksums
        cd dist
        sha256sum -c checksums.txt
        
        # Verify GPG signatures if available
        if [ -f checksums.txt.sig ]; then
          gpg --verify checksums.txt.sig checksums.txt
        fi



    - name: Update release with security scan results
      if: always()
      run: |
        # Add security scan status to release notes
        echo "## Security Scan Results" >> release_notes_append.md
        echo "" >> release_notes_append.md
        echo "- Binary security verification completed" >> release_notes_append.md
        echo "- All artifacts signed and checksummed" >> release_notes_append.md

  post-release:
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create success notification
      run: |
        echo "🎉 Release ${{ github.ref_name }} completed successfully!"
        echo "📦 Binaries available at: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
        echo "🍺 Homebrew: brew install euan-cowie/tap/cidrator"
        echo "📥 Go install: go install github.com/euan-cowie/cidrator@${{ github.ref_name }}"

    - name: Trigger documentation update
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: release-published
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "version": "${{ github.ref_name }}"}' 